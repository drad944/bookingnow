<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <display-name></display-name>	
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
  

<!-- 
   <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
   -->
      <!--
      - Publishes events for session creation and destruction through the application
      - context. Optional unless concurrent session control is being used.
      -->
    <listener>
      <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>
  
  
  <servlet>   
    	<servlet-name>log4j servlet</servlet-name>
   	 	<servlet-class>com.pitaya.bookingnow.servlet.Log4jInitServlet</servlet-class>
    	<init-param>
        	<param-name>configfile</param-name>
        	<param-value>/WEB-INF/classes/log4j.xml</param-value>
    	</init-param>
       
    	<load-on-startup>1</load-on-startup>
    	
    	
	</servlet>
	
	<servlet>
		<servlet-name>message service servlet</servlet-name>
   	 	<servlet-class>com.pitaya.bookingnow.servlet.InitMessageServiceServlet</servlet-class>
    	<init-param>
        	<param-name>port</param-name>
        	<param-value>19191</param-value>
    	</init-param>
       
    	<load-on-startup>1</load-on-startup>
	</servlet>
	
	<filter>
	    <filter-name>struts2</filter-name>
	    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>struts2</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
        	
    <listener>    
        <listener-class>com.pitaya.bookingnow.listener.SessionListener</listener-class>    
    </listener>
    
    <listener>    
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>    
    </listener>
    <context-param>    
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/classes/applicationContext.xml,classpath*:applicationContext*.xml</param-value>
        <!--    
        <param-value>classpath*:applicationContext*.xml</param-value>
         -->     
    </context-param>
    
          <!-- Spring刷新Interceptor防止内存泄漏 11/3/22 22:04 -->
    <listener>
    	<listener-class>
    	org.springframework.web.util.IntrospectorCleanupListener
    	</listener-class>
    </listener>
    
    	<!--
		设置session 超时:
		session-config元素为Web应用中的javax.servlet.http.HttpSession对象定义参数。
		session-timeout元素用来指定默认的会话超时时间间隔，以分钟为单位。该元素值必须为整数。
		如果session-timeout元素的值为零或负数，则表示会话将永远不会超时。
		下面是一个部署描述符，在用户最近访问HttpSession对象20分钟后，HttpSession对象默认为无效。
	-->
    
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>
    
</web-app>
