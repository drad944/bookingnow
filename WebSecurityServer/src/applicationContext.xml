<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 http://www.springframework.org/schema/tx
	 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	 http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	 http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context-3.0.xsd">
					  
	<context:property-placeholder location="classpath:database.properties" /> 

	<bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true" />
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}" />
		<property name="initialPoolSize" value="${cpool.minPoolSize}" />
		<property name="minPoolSize" value="${cpool.minPoolSize}" />
		<property name="maxPoolSize" value="${cpool.maxPoolSize}" />
		<property name="maxIdleTime" value="${cpool.maxIdleTime}" />
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" />
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="c3p0DataSource" />
	</bean>



	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"  value="com.pitaya.bookingnow.dao.security.UserMapper" />   
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>
    
	<bean id="userService" class="com.pitaya.bookingnow.service.impl.security.UserService">
		<property name="userDao" ref="userDao" />
	</bean>

	<bean id="userAction" class="com.pitaya.bookingnow.action.UserAction" scope="prototype">
		<property name="userService" ref="userService" />
	</bean>
	
	
	
	

	
	
	
	<bean id="foodDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"  value="com.pitaya.bookingnow.dao.FoodMapper" />   
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>
    
	<bean id="foodService" class="com.pitaya.bookingnow.service.impl.FoodService">
		<property name="foodDao" ref="foodDao" />
		<property name="food_pictureDao" ref="food_pictureDao" />
	</bean>

	<bean id="foodAction" class="com.pitaya.bookingnow.action.FoodAction" scope="prototype">
		<property name="foodService" ref="foodService" />
	</bean>
	
	
	<bean id="food_pictureDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"  value="com.pitaya.bookingnow.dao.Food_PictureMapper" />   
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>
	
	<bean id="food_pictureService" class="com.pitaya.bookingnow.service.impl.Food_PictureService">
		<property name="food_pictureDao" ref="food_pictureDao" />
	</bean>
	
	
	<bean id="orderDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"  value="com.pitaya.bookingnow.dao.OrderMapper" />   
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>
    
	<bean id="orderService" class="com.pitaya.bookingnow.service.impl.OrderService">
		<property name="orderDao" ref="orderDao" />
	</bean>

	<bean id="orderAction" class="com.pitaya.bookingnow.action.OrderAction" scope="prototype">
		<property name="orderService" ref="orderService" />
	</bean>
	
	
	
	

    
	
	
</beans>