<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pitaya.bookingnow.dao.security.UserMapper">
	<resultMap id="BaseResultMap" type="com.pitaya.bookingnow.entity.security.User">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="department" property="department" jdbcType="INTEGER" />
		<result column="sub_system" property="sub_system" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, account, name, password, phone, sex, email, address, birthday,
		description, department,
		sub_system
	</sql>

	<select id="login" resultMap="BaseResultMap"
		parameterType="com.pitaya.bookingnow.entity.security.User">
		select
		<include refid="Base_Column_List" />
		from pitaya_user
		where account = #{account,jdbcType=VARCHAR} and password =
		#{password,jdbcType=VARCHAR}
	</select>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from pitaya_user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from pitaya_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.pitaya.bookingnow.entity.security.User">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into pitaya_user (account, name, password,
		phone, sex, email,
		address, birthday, description,
		department, sub_system)
		values (#{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP},
		#{description,jdbcType=VARCHAR},
		#{department,jdbcType=INTEGER}, #{sub_system,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.pitaya.bookingnow.entity.security.User">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into pitaya_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="account != null">
				account,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="department != null">
				department,
			</if>
			<if test="sub_system != null">
				sub_system,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				#{department,jdbcType=INTEGER},
			</if>
			<if test="sub_system != null">
				#{sub_system,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.pitaya.bookingnow.entity.security.User">
		update pitaya_user
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				department = #{department,jdbcType=INTEGER},
			</if>
			<if test="sub_system != null">
				sub_system = #{sub_system,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.pitaya.bookingnow.entity.security.User">
		update pitaya_user
		set account = #{account,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		email = #{email,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		description = #{description,jdbcType=VARCHAR},
		department = #{department,jdbcType=INTEGER},
		sub_system = #{sub_system,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>